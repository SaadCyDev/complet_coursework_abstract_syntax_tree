{"ast":null,"code":"var _jsxFileName = \"/home/saadk/Documents/coursework/src/components/Ast.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Ast() {\n  _s();\n  const [textValue, setTextValue] = useState(\"\");\n  let displayCode1 = useRef();\n  let refTextArea = useRef();\n  const handleTextAreaChange = event => {\n    setTextValue(refTextArea.current.value);\n    // displayCode1.current.innerHTML = textValue;\n    //console.log(refTextArea.current.value);\n  };\n  const handleASTComparison = () => {\n    console.log(textValue);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: \"20\",\n      cols: \"50\",\n      value: textValue,\n      onChange: handleTextAreaChange,\n      ref: refTextArea\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleASTComparison,\n      children: \"AST comparison \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(Ast, \"EBBw/BryOrfi+PUIZ0zbjtQP9gY=\");\n_c = Ast;\nexport default Ast;\nvar _c;\n$RefreshReg$(_c, \"Ast\");","map":{"version":3,"names":["React","useRef","useState","jsxDEV","_jsxDEV","Ast","_s","textValue","setTextValue","displayCode1","refTextArea","handleTextAreaChange","event","current","value","handleASTComparison","console","log","children","rows","cols","onChange","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/saadk/Documents/coursework/src/components/Ast.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\n\nfunction Ast() {\n  const [textValue, setTextValue] = useState(\"\");\n  let displayCode1 = useRef();\n  let refTextArea = useRef();\n\n  const handleTextAreaChange = (event) => {\n    setTextValue(refTextArea.current.value);\n    // displayCode1.current.innerHTML = textValue;\n    //console.log(refTextArea.current.value);\n  };\n\n  const handleASTComparison = () => {\n    console.log(textValue);\n  };\n\n  return (\n    <div>\n      <textarea\n        rows=\"20\"\n        cols=\"50\"\n        value={textValue}\n        onChange={handleTextAreaChange}\n        ref={refTextArea}\n      ></textarea>\n      <button onClick={handleASTComparison}>AST comparison </button>\n    </div>\n  );\n}\n\nexport default Ast;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC9C,IAAIO,YAAY,GAAGR,MAAM,CAAC,CAAC;EAC3B,IAAIS,WAAW,GAAGT,MAAM,CAAC,CAAC;EAE1B,MAAMU,oBAAoB,GAAIC,KAAK,IAAK;IACtCJ,YAAY,CAACE,WAAW,CAACG,OAAO,CAACC,KAAK,CAAC;IACvC;IACA;EACF,CAAC;EAED,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;IAChCC,OAAO,CAACC,GAAG,CAACV,SAAS,CAAC;EACxB,CAAC;EAED,oBACEH,OAAA;IAAAc,QAAA,gBACEd,OAAA;MACEe,IAAI,EAAC,IAAI;MACTC,IAAI,EAAC,IAAI;MACTN,KAAK,EAAEP,SAAU;MACjBc,QAAQ,EAAEV,oBAAqB;MAC/BW,GAAG,EAAEZ;IAAY;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eACZtB,OAAA;MAAQuB,OAAO,EAAEZ,mBAAoB;MAAAG,QAAA,EAAC;IAAe;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEV;AAACpB,EAAA,CA3BQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AA6BZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
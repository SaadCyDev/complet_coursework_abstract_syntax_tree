{"ast":null,"code":"var _jsxFileName = \"/home/saadk/Documents/coursework/src/components/Ast.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Ast() {\n  _s();\n  const [textValue, setTextValue] = useState(\"\");\n  let displayCode1 = useRef();\n  let refTextArea = useRef();\n  let [selectedFile1, setSelectedFile1] = useState(null);\n  const handleTextAreaChange1 = event => {\n    //setTextValue(refTextArea.current.value);\n    // displayCode1.current.innerHTML = textValue;\n    //console.log(refTextArea.current.value);\n    const file = event.target.files[0];\n    if (file) {\n      if (file.name.endsWith(\".txt\")) {\n        setSelectedFile1(file);\n      } else {\n        alert(\"Please select a text file\");\n        event.target.value = null;\n      }\n    }\n  };\n  const handleASTComparison = () => {\n    console.log(textValue);\n    displayCode1.current.innerHTML = textValue;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"divInputs\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Code 1:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".txt\",\n        value: textValue,\n        onChange: handleTextAreaChange1,\n        ref: refTextArea\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), selectedFile1 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Selected File :\", selectedFile1.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Code 2:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        value: textValue\n        //   onChange={handleTextAreaChange}\n        ,\n        ref: refTextArea\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"divButton\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleASTComparison,\n        children: \"AST comparison \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      ref: displayCode1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Result : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(Ast, \"HThkEkk4KwIhYVTADur5NTNreo8=\");\n_c = Ast;\nexport default Ast;\nvar _c;\n$RefreshReg$(_c, \"Ast\");","map":{"version":3,"names":["React","useRef","useState","jsxDEV","_jsxDEV","Ast","_s","textValue","setTextValue","displayCode1","refTextArea","selectedFile1","setSelectedFile1","handleTextAreaChange1","event","file","target","files","name","endsWith","alert","value","handleASTComparison","console","log","current","innerHTML","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","ref","onClick","_c","$RefreshReg$"],"sources":["/home/saadk/Documents/coursework/src/components/Ast.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\n\nfunction Ast() {\n  const [textValue, setTextValue] = useState(\"\");\n  let displayCode1 = useRef();\n  let refTextArea = useRef();\n  let [selectedFile1, setSelectedFile1] = useState(null);\n\n  const handleTextAreaChange1 = (event) => {\n    //setTextValue(refTextArea.current.value);\n    // displayCode1.current.innerHTML = textValue;\n    //console.log(refTextArea.current.value);\n    const file = event.target.files[0];\n\n    if (file) {\n      if (file.name.endsWith(\".txt\")) {\n        setSelectedFile1(file);\n      } else {\n        alert(\"Please select a text file\");\n        event.target.value = null;\n      }\n    }\n  };\n\n  const handleASTComparison = () => {\n    console.log(textValue);\n    displayCode1.current.innerHTML = textValue;\n  };\n\n  return (\n    <div>\n      <div className=\"divInputs\">\n        <label>Code 1:</label>\n        <input\n          type=\"file\"\n          accept=\".txt\"\n          value={textValue}\n          onChange={handleTextAreaChange1}\n          ref={refTextArea}\n        ></input>\n        {selectedFile1 && <p>Selected File :{selectedFile1.name}</p>}\n        <label>Code 2:</label>\n        <input\n          type=\"file\"\n          value={textValue}\n          //   onChange={handleTextAreaChange}\n          ref={refTextArea}\n        ></input>\n      </div>\n      <div className=\"divButton\">\n        <button onClick={handleASTComparison}>AST comparison </button>\n      </div>\n\n      <span ref={displayCode1}></span>\n      <div>\n        <h1>Result : </h1>\n      </div>\n    </div>\n  );\n}\n\nexport default Ast;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}